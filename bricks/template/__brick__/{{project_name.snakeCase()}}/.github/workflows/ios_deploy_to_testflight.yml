name: ios-deploy-production-to-testflight
on:
  # Trigger the workflow on push action
  push:
    branches:
      - main

jobs:
  build_and_upload_to_testflight:
    name: Build And Upload iOS Application Production To TestFlight
    runs-on: macOS-latest
    environment: production
    timeout-minutes: 30
    env:
      TEAM_ID: ${{#mustacheCase}}secrets.TEAM_ID{{/mustacheCase}}
      FASTLANE_USER: ${{#mustacheCase}}secrets.FASTLANE_USER{{/mustacheCase}}
      FASTLANE_PASSWORD: ${{#mustacheCase}}secrets.FASTLANE_PASSWORD{{/mustacheCase}}
      FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{#mustacheCase}}secrets.FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD{{/mustacheCase}}
      FASTLANE_SESSION: ${{#mustacheCase}}secrets.FASTLANE_SESSION{{/mustacheCase}}
      MATCH_PASSWORD: ${{#mustacheCase}}secrets.MATCH_PASSWORD{{/mustacheCase}}
      KEYCHAIN_PASSWORD: ${{#mustacheCase}}secrets.KEYCHAIN_PASSWORD{{/mustacheCase}}
      APP_STORE_KEY_ID: ${{#mustacheCase}}secrets.APP_STORE_KEY_ID{{/mustacheCase}}
      APP_STORE_ISSUER_ID: ${{#mustacheCase}}secrets.APP_STORE_ISSUER_ID{{/mustacheCase}}
      APP_STORE_CONNECT_API_KEY_BASE64: ${{#mustacheCase}}secrets.APP_STORE_CONNECT_API_KEY_BASE64{{/mustacheCase}}
      GITHUB_RUN_NUMBER: $GITHUB_RUN_NUMBER
    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Install SSH key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{#mustacheCase}}secrets.SSH_PRIVATE_KEY{{/mustacheCase}}

      - name: Set up Flutter environment
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: '3.10.5'

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Set up Production env
        env:
          ENV: ${{#mustacheCase}}secrets.ENV{{/mustacheCase}}
        run: |
          echo -e "$ENV" >> .env

      - name: Run code generator
        run: flutter packages pub run build_runner build --delete-conflicting-outputs

      - name: Cache Ruby gems
        uses: actions/cache@v3
        id: bunlderCache
        with:
          path: ios/vendor/bundle
          key: ${{#mustacheCase}}runner.os{{/mustacheCase}}-gems-${{#mustacheCase}}hashFiles('**/Gemfile.lock'){{/mustacheCase}}
          restore-keys: ${{#mustacheCase}}runner.os{{/mustacheCase}}-gems-

      - name: Cache Pods
        uses: actions/cache@v3
        id: cocoapodCache
        with:
          path: ios/Pods
          key: ${{#mustacheCase}}runner.os{{/mustacheCase}}-pods-${{#mustacheCase}}hashFiles('**/Podfile.lock'){{/mustacheCase}}
          restore-keys: ${{#mustacheCase}}runner.os{{/mustacheCase}}-pods-

      - name: Bundle install
        run: cd ./ios && bundle install

      - name: Pod install
        run: cd ./ios && pod install

      - name: Update fastlane
        run: cd ./ios && bundle update fastlane

      - name: Update plugins
        run: cd ./ios && bundle exec fastlane update_plugins

      - name: Match AppStore
        run: cd ./ios && bundle exec fastlane sync_appstore_production_signing
        env:
          GITHUB_RUN_NUMBER: $GITHUB_RUN_NUMBER

      - name: Deploy to TestFlight
        run: |
          cd ./ios && bundle exec fastlane build_and_upload_testflight_production_app
